name: Code Standards
on:
  push:
    paths:
      - "**.py"
  pull_request:
    branches:
      - master
      - dev
    paths:
      - "**.py"
  workflow_dispatch:

jobs:
  code_styling:
    name: "Code Styling"
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install Dependencies
        run: |
          pip install poetry
          poetry install --with styling
      - name: Run Ruff
        run: poetry run ruff homeassistant_api
      - name: Run MyPy
        run: poetry run mypy homeassistant_api --show-error-codes

  code_functionality:
    name: "Code Functionality"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install Dependencies
        run: |
          sudo apt-get -qq install -y libffi-dev \
            libssl-dev libjpeg-dev zlib1g-dev \
            autoconf build-essential libopenjp2-7 libtiff5 \
            libturbojpeg0-dev tzdata
      - name: Unpack Testing Server Config
        run: |
          unzip tests/homeassistant.zip
      - name: Initialize Testing Server and Run Suite
        run: |
          echo "::group::Install Project Dependencies"
          python3 -m pip install poetry
          python3 -m poetry install --with testing
          echo "::endgroup::"

          echo "::group::Install Home Assistant Dependencies"
          python3 -m venv .
          . bin/activate
          python3 -m pip install homeassistant
          echo "::endgroup::"

          echo "::group::Starting the Testing Server"
          hass -c test_server/config &
          deactivate

          # Wait at least 60 seconds for server to install packages and start.
          echo "::debug::Waiting for Server to Start"
          sleep 60
          echo "::endgroup::"

          # Run Test Suite
          echo "::group::Running Test Suite"
          TOKEN="$(cat test_server/config/token.txt)"
          export PYTHONPATH=.
          export HOMEASSISTANTAPI_URL="http://localhost:8123/api"
          export HOMEASSISTANTAPI_TOKEN="$TOKEN"
          poetry run pytest tests --disable-warnings --cov --cov-report xml:coverage.xml
          echo "::endgroup::"
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
